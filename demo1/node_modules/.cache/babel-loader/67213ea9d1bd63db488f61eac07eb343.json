{"ast":null,"code":"import _classCallCheck from \"D:\\\\ppdata\\\\config\\\\ttgh\\\\react-basic\\\\demo1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\ppdata\\\\config\\\\ttgh\\\\react-basic\\\\demo1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\ppdata\\\\config\\\\ttgh\\\\react-basic\\\\demo1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\ppdata\\\\config\\\\ttgh\\\\react-basic\\\\demo1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\ppdata\\\\config\\\\ttgh\\\\react-basic\\\\demo1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\ppdata\\\\config\\\\ttgh\\\\react-basic\\\\demo1\\\\src\\\\components\\\\Content.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Title from './Title';\nimport Input from './Input';\nimport Button from './Button';\nimport Delete from './Delete';\n\nvar Content =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Content, _Component);\n\n  function Content() {\n    var _this;\n\n    _classCallCheck(this, Content);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Content).call(this));\n    _this.state = {};\n    return _this;\n  }\n  /*showContent = (e) => {\r\n    this.setState({\r\n      isShow: !this.state.isShow\r\n    })\r\n  }\r\n  changeName = (e, index) => {\r\n    console.log(index);\r\n    let persons = this.state.persons\r\n    let persion = {\r\n      ...persons[index]\r\n    }\r\n    persion.name = e.target.value;\r\n    persons[index] = persion\r\n    this.setState({\r\n      persons: persons\r\n    })\r\n  }\r\n  deletePerson = (e, index) => {\r\n    let persons = this.props.persons\r\n    persons.splice(index, 1)\r\n    this.setState({\r\n      persons: persons\r\n    })\r\n  }*/\n\n\n  _createClass(Content, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"componentDidMount\");\n      console.log(this.props.ddd);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps() {\n      console.log(\"componentWillReceiveProps\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var butStyle = {\n        color: \"green\",\n        backgroundColor: \"red\"\n      };\n      var persons = null;\n\n      if (this.props.isShow) {\n        persons = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, this.props.persons.map(function (person, index) {\n          return React.createElement(\"div\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, React.createElement(Title, {\n            name: person.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }), React.createElement(Input, {\n            index: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }), React.createElement(Delete, {\n            deletePerson: function deletePerson(event) {\n              return _this2.deletePerson(event, index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }));\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), persons);\n    }\n  }]);\n\n  return Content;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    persons: state.person.persons,\n    isShow: state.person.isShow\n  };\n};\n\nexport default connect(mapStateToProps)(Content);","map":{"version":3,"sources":["D:\\ppdata\\config\\ttgh\\react-basic\\demo1\\src\\components\\Content.js"],"names":["React","Component","PropTypes","connect","Title","Input","Button","Delete","Content","state","console","log","props","ddd","butStyle","color","backgroundColor","persons","isShow","map","person","index","name","event","deletePerson","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;IAEMC,O;;;;;AACJ,qBAAa;AAAA;;AAAA;;AACX;AACA,UAAKC,KAAL,GAAa,EAAb;AAFW;AAIZ;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;wCAyBmB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,GAAvB;AACD;;;gDAC0B;AACzBH,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD;;;6BACQ;AAAA;;AACP,UAAIG,QAAQ,GAAG;AACbC,QAAAA,KAAK,EAAE,OADM;AAEbC,QAAAA,eAAe,EAAE;AAFJ,OAAf;AAIA,UAAIC,OAAO,GAAG,IAAd;;AACA,UAAG,KAAKL,KAAL,CAAWM,MAAd,EAAqB;AACnBD,QAAAA,OAAO,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEE,KAAKL,KAAL,CAAWK,OAAX,CAAmBE,GAAnB,CAAuB,UAACC,MAAD,EAASC,KAAT,EAAmB;AACxC,iBAAO;AAAK,YAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACH,oBAAC,KAAD;AAAO,YAAA,IAAI,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,EAEH,oBAAC,KAAD;AAAO,YAAA,KAAK,EAAED,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,EAGH,oBAAC,MAAD;AAAQ,YAAA,YAAY,EAAE,sBAACE,KAAD;AAAA,qBAAW,MAAI,CAACC,YAAL,CAAkBD,KAAlB,EAAyBF,KAAzB,CAAX;AAAA,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHG,CAAP;AAKD,SAND,CAFF,CADF;AAaD;;AACD,aACF;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHD,EAIEJ,OAJF,CADE;AAQD;;;;EAnEmBhB,S;;AAsEtB,IAAMwB,eAAe,GAAG,SAAlBA,eAAkB,CAAAhB,KAAK;AAAA,SAAK;AACjCQ,IAAAA,OAAO,EAAER,KAAK,CAACW,MAAN,CAAaH,OADW;AAEjCC,IAAAA,MAAM,EAAET,KAAK,CAACW,MAAN,CAAaF;AAFY,GAAL;AAAA,CAA7B;;AAKA,eAAef,OAAO,CAACsB,eAAD,CAAP,CAAyBjB,OAAzB,CAAf","sourcesContent":["import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Title from './Title'\r\nimport Input from './Input'\r\nimport Button from './Button'\r\nimport Delete from './Delete'\r\n\r\nclass Content extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n    }\r\n  }\r\n  /*showContent = (e) => {\r\n    this.setState({\r\n      isShow: !this.state.isShow\r\n    })\r\n  }\r\n  changeName = (e, index) => {\r\n    console.log(index);\r\n    let persons = this.state.persons\r\n    let persion = {\r\n      ...persons[index]\r\n    }\r\n    persion.name = e.target.value;\r\n    persons[index] = persion\r\n    this.setState({\r\n      persons: persons\r\n    })\r\n  }\r\n  deletePerson = (e, index) => {\r\n    let persons = this.props.persons\r\n    persons.splice(index, 1)\r\n    this.setState({\r\n      persons: persons\r\n    })\r\n  }*/\r\n\r\n  componentDidMount(){\r\n    console.log(\"componentDidMount\");\r\n    console.log(this.props.ddd);\r\n  }\r\n  componentWillReceiveProps(){\r\n    console.log(\"componentWillReceiveProps\");\r\n  }\r\n  render() {\r\n    let butStyle = {\r\n      color: \"green\",\r\n      backgroundColor: \"red\"\r\n    }\r\n    let persons = null\r\n    if(this.props.isShow){\r\n      persons = (\r\n        <div>\r\n        {\r\n          this.props.persons.map((person, index) => {\r\n            return <div key={index}>\r\n                <Title name={person.name}></Title>\r\n                <Input index={index}></Input>\r\n                <Delete deletePerson={(event) => this.deletePerson(event, index)} ></Delete>\r\n              </div>\r\n          })\r\n        }\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n\t\t<div className=\"App\">\r\n\t\t\t{/*<Button style={this.props.isShow ? butStyle:null} showContent={this.showContent.bind(this)}></Button>*/}\r\n\t\t\t<Button></Button>\r\n\t\t\t<br/>\r\n\t\t\t{persons}\r\n\t\t</div>\t\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tpersons: state.person.persons,\r\n\tisShow: state.person.isShow\r\n})\r\n\r\nexport default connect(mapStateToProps)(Content)\r\n"]},"metadata":{},"sourceType":"module"}