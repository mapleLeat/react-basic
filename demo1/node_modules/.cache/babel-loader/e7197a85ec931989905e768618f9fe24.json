{"ast":null,"code":"import _classCallCheck from \"D:\\\\gitworks\\\\react-basic\\\\demo1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\gitworks\\\\react-basic\\\\demo1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\gitworks\\\\react-basic\\\\demo1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\gitworks\\\\react-basic\\\\demo1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\gitworks\\\\react-basic\\\\demo1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\gitworks\\\\react-basic\\\\demo1\\\\src\\\\components\\\\Button.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeName } from '../actions/personsAction';\n\nvar Button =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Button, _Component);\n\n  function Button() {\n    _classCallCheck(this, Button);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Button).apply(this, arguments));\n  }\n\n  _createClass(Button, [{\n    key: \"render\",\n    value: function render() {\n      var butStyle = {\n        color: \"green\",\n        backgroundColor: \"red\"\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"button\",\n        onClick: this.props.showContent,\n        style: this.props.isShow ? butStyle : null,\n        value: \"\\u5207\\u6362\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Button;\n}(Component);\n\nButton.proptypes = {\n  showContent: PropTypes.func.isRequired,\n  isShow: PropTypes.boolean.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isShow: state.isShow\n  };\n};\n\nexport default connect(mapStateToProps, {\n  showContent: showContent\n})(Button);","map":{"version":3,"sources":["D:\\gitworks\\react-basic\\demo1\\src\\components\\Button.js"],"names":["React","Component","PropTypes","connect","changeName","Button","butStyle","color","backgroundColor","props","showContent","isShow","proptypes","func","isRequired","boolean","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;;IAEMC,M;;;;;;;;;;;;;6BACG;AACJ,UAAIC,QAAQ,GAAG;AACbC,QAAAA,KAAK,EAAE,OADM;AAEbC,QAAAA,eAAe,EAAE;AAFJ,OAAf;AAIH,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,WAAzC;AAAsD,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,MAAX,GAAmBL,QAAnB,GAA4B,IAAzF;AAA+F,QAAA,KAAK,EAAC,cAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CADD;AAKA;;;;EAXmBL,S;;AAerBI,MAAM,CAACO,SAAP,GAAmB;AAClBF,EAAAA,WAAW,EAAER,SAAS,CAACW,IAAV,CAAeC,UADV;AAElBH,EAAAA,MAAM,EAAET,SAAS,CAACa,OAAV,CAAkBD;AAFR,CAAnB;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AACjCN,IAAAA,MAAM,EAAEM,KAAK,CAACN;AADmB,GAAL;AAAA,CAA7B;;AAIA,eAAeR,OAAO,CAACa,eAAD,EAAkB;AAACN,EAAAA,WAAW,EAAXA;AAAD,CAAlB,CAAP,CAAwCL,MAAxC,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport {changeName} from '../actions/personsAction'\r\n\r\nclass Button extends Component {\r\n\trender(){\r\n\t    let butStyle = {\r\n\t      color: \"green\",\r\n\t      backgroundColor: \"red\"\r\n\t    }\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<input type=\"button\" onClick={this.props.showContent} style={this.props.isShow? butStyle:null} value=\"切换\"/>\r\n\t\t\t</div>\r\n\t\t);\t\r\n\t}\r\n\r\n}\r\n\r\nButton.proptypes = {\r\n\tshowContent: PropTypes.func.isRequired,\r\n\tisShow: PropTypes.boolean.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tisShow: state.isShow\r\n})\r\n\r\nexport default connect(mapStateToProps, {showContent})(Button) "]},"metadata":{},"sourceType":"module"}